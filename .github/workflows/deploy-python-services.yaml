name: Deploy Python Services workflow

on:
  workflow_call:
    inputs:
      tag:
          description: "The git tag identifying which version of the services to deploy"
          required: true
          type: string
      environment:
          description: "The name of the environment to deploy the services into"
          required: false
          default: "dev"
          type: string
      domain:
          description: "The name of the domain to deploy from. If not supplied, we will deploy from the domain that has invoked the workflow"
          required: false
          default: ""
          type: string
      workspace:
          description: "The name of the workspace to deploy the services into. If not supplied we will deploy into a workspace derived from the invoking branch or tag."
          required: false
          default: ""
          type: string
      services:
          description: "A list of the services to deploy from the domain. If not supplied, no services will be deployed"
          required: false
          default: ""
          type: string

jobs:
  deploy-services:
    name: "Deploy Services"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 2
    strategy:
      matrix:
        service: ${{ fromJSON(inputs.services) }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        # with:
        #   ref: ${{ inputs.tag }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-dos-management-github-runner
          role-session-name: github-pipeline-session
          aws-region: ${{ vars.AWS_REGION }}

      - name: "Deploy service"
        uses: NHSDigital/uec-dos-management/.github/actions/deploy-service@task/DR-596_Deploy_service_workflow
        with:
          tag: ${{ inputs.tag }}
          environment: ${{ inputs.environment }}
          workspace: ${{ inputs.workspace }}
          artefact: ${{ matrix.service }}
