name: New Build And Deploy React App

on:
  workflow_call:
    inputs:
      environment:
        description: "The name of the environment to deploy into"
        required: true
        type: string
      workspace:
        description: "The name of the workspace to deploy the application into"
        required: true
        type: string
      code_directory:
        description: "The root directory for react code"
        required: false
        type: string
        default: "src/frontend"
      repo_name:
        description: "The name of the code repository"
        required: true
        type: string
      tag:
        description: "The tag to build and deploy from"
        required: false
        default: ""
        type: string

jobs:
  react-metadata:
    uses: ./.github/workflows/react-metadata.yaml
    with:
      repo_name: ${{ inputs.repo_name }}
      environment: ${{ inputs.environment }}
      workspace: ${{ inputs.workspace }}
    secrets: inherit

  build-and-deploy-react-app:
    name: "Prepare, build and deploy react application"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    needs: [
          react-metadata,
        ]
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.11
        with:
          tag: ${{ inputs.tag }}

      - name: Set up Node.js
        uses: NHSDigital/uec-dos-management/.github/actions/install-node@task/DR-780_React_flows_and_scripts

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ inputs.code_directory }}

      - name: Run Linter
        run: npm run lint
        working-directory: ${{ inputs.code_directory }}
# TODO
      # - name: Run Unit Tests
      #   run: |
      #     /bin/bash ./scripts/npm-unit-tests.sh

      - name: Build React application
        run: npm run build
        working-directory: ${{ inputs.code_directory }}

      - name: Configure AWS Credentials
        uses: NHSDigital/uec-dos-management/.github/actions/configure-credentials@v0.11
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}

      # - name: Derive spa bucket
      #   uses: NHSDigital/uec-dos-management/.github/actions/derive-frontend-bucket@task/DR-780_React_flows_and_scripts
      #   with:
      #     repo_name: ${{ inputs.repo_name }}
      #     environment: ${{ inputs.environment }}
      #     workspace: ${{ inputs.workspace }}

      # - name: Echo spa bucket name
      #   shell: bash
      #   run: |
      #     echo ${{ needs.react-metadata.outputs.spa_bucket_name }}
      #     echo "done"

      - name: Deploy react application
        shell: bash
        run: |
          echo "Deploying to ${{ needs.react-metadata.outputs.spa_bucket_name }}"
          aws s3 sync build/ s3://${{ needs.react-metadata.outputs.spa_bucket_name }}/
        working-directory: ${{ inputs.code_directory }}

      # - name: Deploy React App
      #   uses: NHSDigital/uec-dos-management/.github/actions/deploy-react-app@task/DR-780_React_flows_and_scripts
      #   with:
      #     spa_bucket_name: ${{ needs.react-metadata.outputs.spa_bucket_name }}

      # - name: Get CloudFront Distribution ID
      #   run: |
      #     echo "DISTRIBUTION_ID=$(/bin/bash ./scripts/get-front-end-cloudfront-distribution.sh)" >> $GITHUB_ENV

      # - name: Invalidate CloudFront Cache
      #   shell: bash
      #   run: |
      #     /bin/bash ./scripts/invalidate-cloudfront-cache.sh

# TODO
      # - name: Handle Deployment Workspace and Bucket Name
      #   run: |
      #     REPO_NAME=$(echo "${{ github.repository }}" | awk -F/ '{print $2}')
      #     ENVIRONMENT=${{ inputs.environment }}
      #     WORKSPACE=${{ inputs.workspace }}

      #     echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_ENV
      #     echo "WORKSPACE=${WORKSPACE}" >> $GITHUB_ENV

      #     if [[ "${WORKSPACE}" == "default" ]]; then
      #       BUCKET_NAME="nhse-${REPO_NAME}-${ENVIRONMENT}-front-end"
      #     else
      #       BUCKET_NAME="nhse-${REPO_NAME}-${ENVIRONMENT}-front-end-${WORKSPACE}"
      #     fi
      #     echo "BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_ENV
      #   shell: bash

      # - name: Use Bucket Name
      #   run: |
      #     echo "Bucket: ${BUCKET_NAME}"

      # - name: Deploy React App
      #   run: |
      #     aws s3 sync build/ s3://${{ env.BUCKET_NAME }}/
      #   working-directory: src/frontend

      # - name: Get CloudFront Distribution ID
      #   run: |
      #     echo "DISTRIBUTION_ID=$(/bin/bash ./scripts/get-front-end-cloudfront-distribution.sh)" >> $GITHUB_ENV

      # - name: Invalidate CloudFront Cache
      #   run: |
      #     /bin/bash ./scripts/invalidate-cloudfront-cache.sh
