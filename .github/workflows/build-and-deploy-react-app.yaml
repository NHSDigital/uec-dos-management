name: Build And Deploy React App

on:
  workflow_call:
    inputs:
      environment:
        description: "The name of the environment to deploy into"
        required: true
        type: string
      workspace:
        description: "The name of the workspace to deploy the application into"
        required: true
        type: string
      code_directory:
        description: "The root directory for react code"
        required: false
        type: string
        default: "src/frontend"
      repo_name:
        description: "The name of the code repository"
        required: true
        type: string
      tag:
        description: "The tag to build and deploy from"
        required: false
        default: ""
        type: string

jobs:
  react-infra-data:
    name: Get react infrastructure data
    uses: ./.github/workflows/react-infra-data.yaml
    with:
      repo_name: ${{ inputs.repo_name }}
      environment: ${{ inputs.environment }}
      workspace: ${{ inputs.workspace }}
    secrets: inherit

  build-and-deploy-react-app:
    name: "Prepare, build and deploy react application"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    needs: [
          react-infra-data,
        ]
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.11
        with:
          tag: ${{ inputs.tag }}
          management-tag: task/DR-780_React_flows_and_scripts

      - name: Set up Node.js
        uses: NHSDigital/uec-dos-management/.github/actions/install-node@task/DR-780_React_flows_and_scripts

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ inputs.code_directory }}

      - name: Run Linter
        run: npm run lint
        working-directory: ${{ inputs.code_directory }}

      - name: Run Unit Tests
        run: |
          /bin/bash ./uec-dos-management/scripts/workflow/npm-unit-tests.sh

      - name: Build React application
        run: npm run build
        working-directory: ${{ inputs.code_directory }}

      - name: Configure AWS Credentials
        uses: NHSDigital/uec-dos-management/.github/actions/configure-credentials@v0.11
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}

      - name: Deploy react application
        shell: bash
        run: |
          echo "Deploying to ${{ needs.react-infra-data.outputs.spa_bucket_name }}"
          aws s3 sync build/ s3://${{ needs.react-infra-data.outputs.spa_bucket_name }}/
        working-directory: ${{ inputs.code_directory }}

      - name: Invalidate CloudFront Cache
        shell: bash
        run: |
          echo ${{ needs.react-infra-data.outputs.cloudfront_dist_id }}
          export DISTRIBUTION_ID=${{ needs.react-infra-data.outputs.cloudfront_dist_id }}
          /bin/bash ./uec-dos-management/scripts/workflow/invalidate-cloudfront-cache.sh
