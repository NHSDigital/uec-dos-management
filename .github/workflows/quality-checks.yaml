name: Code quality checks workflow

on:
  workflow_call:

    inputs:
        environment:
          description: The relevant github environment (for secrets and variables)
          required: true
          type: string
        workspace:
          description: "The name of the workspace to validate the infrastructure against."
          required: true
          type: string
        tag:
          description: "The git tag to checkout or, if not passed in, the current branch"
          required: false
          type: string
        stacks:
          description: The terraform stacks to be validated
          required: true
          type: string
        code_directory:
          description: 'Directory that holds package json for react app '
          required: false
          type: string
          default: 'src/frontend'
        workflow_timeout:
          description: "Timeout duration in minutes"
          required: false
          default: 5
          type: number
jobs:
  validate-terraform:
    name: "Validate Terraform"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        stack: ${{ fromJson(inputs.stacks) }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
      - name: Configure AWS Credentials
        uses: NHSDigital/uec-dos-management/.github/actions/configure-credentials@v0.23
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
      - name: "Validate terraform stack"
        uses: NHSDigital/uec-dos-management/.github/actions/action-infrastructure-stack@v0.23
        with:
          environment: ${{ inputs.environment }}
          workspace: ${{ inputs.workspace }}
          stack: ${{ matrix.stack }}
          action: validate

  check-terraform-format:
    name: "Check Terraform Format"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
      - name: "Check format of terraform code"
        uses: NHSDigital/uec-dos-management/.github/actions/check-format-terraform@v0.23

  check-file-format:
    name: "Check File Format"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0
      - name: "Check general formatting"
        uses: NHSDigital/uec-dos-management/.github/actions/check-format-general@v0.23

  check-markdown-format:
    name: "Check Markdown Format"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0
      - name: "Check markdown file formatting"
        uses: NHSDigital/uec-dos-management/.github/actions/check-format-markdown@v0.23

  check-python-black-format:
    name: "Check Python Format"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0
      - name: "Check python formatting - black"
        uses: NHSDigital/uec-dos-management/.github/actions/check-format-python@v0.23

  check-python-flake-rules:
    name: "Check Python Syntax"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0
      - name: "Check python syntax - flake"
        uses: NHSDigital/uec-dos-management/.github/actions/check-syntax-python@v0.23

  scan-secrets:
    name: "Scan secrets"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0
      - name: "Scan code for secrets"
        uses: NHSDigital/uec-dos-management/.github/actions/scan-secrets@v0.23

  check-eslint:
    name: "Check ESLint"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: NHSDigital/uec-dos-management/.github/actions/checkout-repository@v0.23
        with:
          tag: ${{ inputs.tag }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: NHSDigital/uec-dos-management/.github/actions/install-node@v0.23

      - name: Install npm dependencies
        uses: NHSDigital/uec-dos-management/.github/actions/install-npm-dependencies@v0.23
        with:
          code_directory: ${{ inputs.code_directory }}

      - name: "Check Javascipt formating"
        uses: NHSDigital/uec-dos-management/.github/actions/check-eslint@v0.23
        with:
          code_directory: ${{ inputs.code_directory }}

