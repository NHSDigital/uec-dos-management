name: Build Full Application workflow

on:
  workflow_call:
    inputs:
      environment:
        description: "The name of the environment to build into"
        required: true
        type: string
      workspace:
        description: "The name of the workspace to build the application into"
        required: true
        type: string
      services:
        description: "A list of the services to build"
        required: false
        default: ""
        type: string
      tag:
        description: "The tag to build from"
        required: false
        default: ""
        type: string
      workflow_timeout:
        description: "Timeout duration in minutes"
        required: false
        default: 5
        type: number
      target_repo:
        description: "The name of the repo"
        required: true
        type: string
      target_repo_commit_hash:
        description: "The name of the target repo branch"
        required: true
        type: string
      artefact_bucket_name:
        description: "Name of s3 repo holding domain artefacts"
        required: true
        type: string

jobs:
  deploy-infrastructure-apply:
    name: "Apply Deploy Infrastructure"
    strategy:
      matrix:
        domain: ['uec-dos-service-management','uec-cm']
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ inputs.environment }}
      workspace: ${{ inputs.workspace }}
      domain: ${{ matrix.domain }}
      stacks: "['application']"
      action: apply
    secrets: inherit

  # deploy-lambda-code:
  #   name: "Deploy Application "
  #   strategy:
  #     matrix:
  #       domain: ['uec-dos-service-management','uec-cm']
  #   uses: ./.github/workflows/deploy-lambda-code.yaml
  #   with:
  #     environment: ${{ inputs.environment }}
  #     workspace: ${{ inputs.workspace }}
  #     domain: ${{ matrix.domain }}
  #     services: 'all'
  #     directory: 'application'
  #     commit_hash: ${{ matrix.domain == inputs.target_repo && inputs.target_repo_commit_hash || 'latest' }}
  #     artefact_bucket_name: ${{ matrix.domain == inputs.target_repo && inputs.artefact_bucket_name }}
  #   secrets: inherit

  test-deploy-lambda-code:
    name: "Deploy Application "
    strategy:
      matrix:
        domain: ['uec-dos-service-management','uec-cm']
    steps:
      - name: "test"
        shell: bash
        run: |
            echo ${{ matrix.domain }}
            echo ${{ inputs.target_repo }}
            echo ${{ inputs.target_repo_commit_hash }}
            echo ${{ matrix.domain == inputs.target_repo && inputs.target_repo_commit_hash || 'latest' }}

  # deploy-react-app:
  #   name: "Deploy react application "
  #   strategy:
  #     matrix:
  #       domain: ['uec-dos-service-management','uec-cm']
  #   uses: ./.github/workflows/deploy-react-app.yaml
  #   with:
  #     environment: int
  #     workspace: ${{ inputs.workspace }}
  #     domain: ${{ matrix.domain }}
  #     stacks: "['application']"
  #     action: plan
  #   secrets: inherit
