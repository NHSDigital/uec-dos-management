name: "Collect metadata action"
description: "Collects metadata for the pipeline being executed"

outputs:
  reponame:
    description: "Name of the code repo"
    value: ${{ steps.metadata.outputs.reponame }}
  commit_hash:
    description: "Commit hash for head of branch being processed"
    value: ${{ steps.metadata.outputs.commit_hash }}
  artefact_commit_hash:
    description: "Commit hash for head of source branch for pull request"
    value: ${{ steps.metadata.outputs.artefact_commit_hash }}
  artefact_bucket_name:
    description: "Repository for domain artefacts"
    value: ${{ steps.metadata.outputs.artefact_bucket_name }}
  build_datetime_london:
    description: "The build date and time in London timezone"
    value: ${{ steps.metadata.outputs.build_datetime_london }}
  build_datetime:
    description: "The build date and time in the repository's default timezone"
    value: ${{ steps.metadata.outputs.build_datetime }}
  build_timestamp:
    description: "Timestamp of the build"
    value: ${{ steps.metadata.outputs.build_timestamp }}
  build_epoch:
    description: "Epoch time of the build"
    value: ${{ steps.metadata.outputs.build_epoch }}
  nodejs_version:
    description: "Version of Node.js used in the build"
    value: ${{ steps.metadata.outputs.nodejs_version }}
  python_version:
    description: "Version of Python used in the build"
    value: ${{ steps.metadata.outputs.python_version }}
  terraform_version:
    description: "Version of Terraform used in the build"
    value: ${{ steps.metadata.outputs.terraform_version }}
  version:
    description: "Version of the repository or application"
    value: ${{ steps.metadata.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: "Get metadata"
      id: "metadata"
      shell: bash
      run : |
        datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
        echo "build_datetime_london=$(TZ=Europe/London date --date=$datetime +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_OUTPUT
        echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
        echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
        echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
        echo "triggering action: ${{ github.event_name }}"
        echo "ref type: ${{ github.ref_type }}"
        echo "triggering reference: ${{ github.ref_name }}"
        echo "github event ref: ${{ github.event.ref }}"
        echo "username of user triggering the workflow: ${{ github.actor }}"
        echo "repo name ${{ github.event.repository.name }}"
        echo "reponame=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
        echo artefact_bucket_name="nhse-mgmt-${{ github.event.repository.name }}-artefacts"
        echo "artefact_bucket_name=nhse-mgmt-${{ github.event.repository.name }}-artefacts" >> $GITHUB_OUTPUT
        echo "commit_hash $(git rev-parse --short $GITHUB_SHA)"
        echo "commit_hash=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_OUTPUT
        echo "artefact_commit_hash=${{ github.event.pull_request.head.sha }}"
        echo "Update to (x + 1) i.e. v0.28"
        if [ -n "${{ github.event.pull_request.head.sha }}" ] ; then
          echo "artefact_commit_hash=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})"
          echo "artefact_commit_hash=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT
        fi
        echo "nodejs_version=$(grep "^nodejs" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
        echo "python_version=$(grep "^python" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
        echo "terraform_version=$(grep "^terraform" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
        echo "version=$(head -n 1 .version 2> /dev/null || echo unknown)" >> $GITHUB_OUTPUT
